---
apiVersion: "v1"
kind: "ServiceAccount"
metadata:
  labels:
    app.kubernetes.io/name: "hobby-frontend"
    app.kubernetes.io/version: "1.0.0"
  name: "hobby-frontend"
---
apiVersion: "v1"
kind: "Service"
metadata:
  labels:
    app.kubernetes.io/name: "hobby-frontend"
    app.kubernetes.io/version: "1.0.0"
  name: "hobby-frontend"
spec:
  ports:
  - name: "http"
    port: 8080
    targetPort: 8080
  selector:
    app.kubernetes.io/name: "hobby-frontend"
    app.kubernetes.io/version: "1.0.0"
  type: "LoadBalancer"
---
apiVersion: "apps/v1"
kind: "Deployment"
metadata:
  labels:
    app.kubernetes.io/name: "hobby-frontend"
    app.kubernetes.io/version: "1.0.0"
  name: "hobby-frontend"
spec:
  replicas: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: "hobby-frontend"
      app.kubernetes.io/version: "1.0.0"
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "hobby-frontend"
        app.kubernetes.io/version: "1.0.0"
    spec:
      containers:
      - env:
        - name: "KUBERNETES_NAMESPACE"
          valueFrom:
            fieldRef:
              fieldPath: "metadata.namespace"
        image: "quay.io/anasandbox/hobby-frontend:1.0.0"
        imagePullPolicy: "IfNotPresent"
        name: "hobby-frontend"
        ports:
        - containerPort: 8080
          name: "http"
          protocol: "TCP"
      serviceAccount: "hobby-frontend"
---
apiVersion: "extensions/v1beta1"
kind: "Ingress"
metadata:
  labels:
    app.kubernetes.io/name: "hobby-frontend"
    app.kubernetes.io/version: "1.0.0"
  name: "hobby-frontend"
spec:
  rules:
  - host: ""
    http:
      paths:
      - backend:
          serviceName: "hobby-frontend"
          servicePort: 8080
        path: "/"
